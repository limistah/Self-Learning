Let’s run a thought experiment. Suppose Facebook keeps a list of usernames. When someone tries to log in to Facebook, a search is done for their username. If their name is in the list of usernames, they can log in. People log in to Facebook pretty often, so there are a lot of searches through this list of usernames. Suppose Facebook uses binary search to search the list. Binary search needs random access—you need to be able to get to the middle of the list of usernames instantly. Knowing this, would you implement the list as an array or a linked list?


Solution:

The best data structure to use is the array due to the random access that could be allowed. Arrays are efficient at random access using an index. Also the only time to write to this data structure is during signup, the whole of the login process is a read action.

